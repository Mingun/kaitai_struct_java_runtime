/**
 * Copyright 2015-2016 Kaitai Project: MIT license
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package io.kaitai.struct;

/**
 * Common base class for all structured generated by Kaitai Struct.
 * Stores stream object that this object was parsed from in {@link #_io}.
 */
public class KaitaiStruct {
    /**
     * Stream object that this KaitaiStruct-based structure was parsed from.
     */
    protected KaitaiStream _io;

    public KaitaiStruct(KaitaiStream _io) {
        this._io = _io;
    }

    public KaitaiStream _io() { return _io; }

    /**
     * Interface that should be implemented by a KaitaiStruct objects
     * that support reading from a supplied stream object.
     */
    public interface Readable {
        KaitaiStream _io();
        void _read();
    }

    /**
     * Interface that should be implemented by a KaitaiStruct objects
     * that support writing to a pre-supplied stream object or to a
     * stream object given explicitly.
     */
    public interface Writable {
        KaitaiStream _io();
        void _write();
        void _write(KaitaiStream io);
    }
}
